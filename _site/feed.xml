<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>restic</title>
    <description>Backups done right!</description>
    <link>https://restic.net/blog/</link>
    <atom:link href="https://restic.net/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sun, 24 May 2020 10:50:13 +0200</pubDate>
    <lastBuildDate>Sun, 24 May 2020 10:50:13 +0200</lastBuildDate>
    <generator>Jekyll v3.8.5</generator>

    
      <item>
        <title>restic 0.9.6 released</title>
        <description>&lt;p&gt;We’ve just released &lt;a href=&quot;https://github.com/restic/restic/releases/v0.9.6&quot;&gt;restic 0.9.6&lt;/a&gt;. For downloading the new release and see a more detailed list of important changes, head over to &lt;a href=&quot;https://github.com/restic/restic/releases/v0.9.6&quot;&gt;GitHub&lt;/a&gt;. If you already have restic (0.9.4 or later), you can use the &lt;code class=&quot;highlighter-rouge&quot;&gt;self-update&lt;/code&gt; command to automatically download and verify the new release.&lt;/p&gt;

&lt;p&gt;As always, thanks for &lt;a href=&quot;https://github.com/restic/restic/issues/new/choose&quot;&gt;reporting any issues&lt;/a&gt; you encounter! Or just write a post in &lt;a href=&quot;https://forum.restic.net&quot;&gt;the forum&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Fri, 22 Nov 2019 00:00:00 +0100</pubDate>
        <link>https://restic.net/blog/2019-11-22/restic-0.9.6-released</link>
        <guid isPermaLink="true">https://restic.net/blog/2019-11-22/restic-0.9.6-released</guid>

        
        

      </item>
    
      <item>
        <title>restic 0.9.5 released</title>
        <description>&lt;p&gt;We’ve just released &lt;a href=&quot;https://github.com/restic/restic/releases/v0.9.5&quot;&gt;restic 0.9.5&lt;/a&gt;. For downloading the new release and see a more detailed list of important changes, head over to &lt;a href=&quot;https://github.com/restic/restic/releases/v0.9.5&quot;&gt;GitHub&lt;/a&gt;. If you already have restic 0.9.4, you can use the &lt;code class=&quot;highlighter-rouge&quot;&gt;self-update&lt;/code&gt; command to automatically download and verify the new release.&lt;/p&gt;

&lt;p&gt;As always, thanks for &lt;a href=&quot;https://github.com/restic/restic/issues/new/choose&quot;&gt;reporting any issues&lt;/a&gt; you encounter! Or just write a post in &lt;a href=&quot;https://forum.restic.net&quot;&gt;the forum&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 23 Apr 2019 00:00:00 +0200</pubDate>
        <link>https://restic.net/blog/2019-04-23/restic-0.9.5-released</link>
        <guid isPermaLink="true">https://restic.net/blog/2019-04-23/restic-0.9.5-released</guid>

        
        

      </item>
    
      <item>
        <title>restic 0.9.4 released</title>
        <description>&lt;p&gt;We’ve just released &lt;a href=&quot;https://github.com/restic/restic/releases/v0.9.4&quot;&gt;restic 0.9.4&lt;/a&gt;. Besides several fixes for bugs it contains a new restorer implementation which downloads data concurrently, so it is much faster than the old one.&lt;/p&gt;

&lt;p&gt;For downloading the new release and see a more detailed list of important changes, head over to &lt;a href=&quot;https://github.com/restic/restic/releases/v0.9.4&quot;&gt;GitHub&lt;/a&gt;. If you already have restic 0.9.3, you can use the &lt;code class=&quot;highlighter-rouge&quot;&gt;self-update&lt;/code&gt; command to automatically download and verify the new release. Due to a &lt;a href=&quot;https://github.com/restic/restic/issues/2041&quot;&gt;bug&lt;/a&gt; you need to specify where restic should write the new file, e.g. like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;restic self-update &lt;span class=&quot;nt&quot;&gt;--output&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;$(&lt;/span&gt;which restic&lt;span class=&quot;k&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can also just specify a path:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;restic self-update &lt;span class=&quot;nt&quot;&gt;--output&lt;/span&gt; /usr/local/bin/restic&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;As always, thanks for &lt;a href=&quot;https://github.com/restic/restic/issues/new/choose&quot;&gt;reporting any issues&lt;/a&gt; you encounter! Or just write a post in &lt;a href=&quot;https://forum.restic.net&quot;&gt;the forum&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 06 Jan 2019 00:00:00 +0100</pubDate>
        <link>https://restic.net/blog/2019-01-06/restic-0.9.4-released</link>
        <guid isPermaLink="true">https://restic.net/blog/2019-01-06/restic-0.9.4-released</guid>

        
        

      </item>
    
      <item>
        <title>New Year, New Infrastructure!</title>
        <description>&lt;p&gt;We wish you a happy new year 2019!&lt;/p&gt;

&lt;p&gt;Our friends at &lt;a href=&quot;https://www.hosting.de&quot;&gt;hosting.de&lt;/a&gt; recently provided us with a dedicated server to host this website, the forum, and the &lt;a href=&quot;https://beta.restic.net&quot;&gt;beta builder&lt;/a&gt; for restic, and we’ve just moved everything over. Thank you very much for your support!&lt;/p&gt;

&lt;p&gt;Please leave a comment in the forum in the thread for this announcement if there’s anything broken for you.&lt;/p&gt;

</description>
        <pubDate>Tue, 01 Jan 2019 00:00:00 +0100</pubDate>
        <link>https://restic.net/blog/2019-01-01/new-infrastructure</link>
        <guid isPermaLink="true">https://restic.net/blog/2019-01-01/new-infrastructure</guid>

        
        

      </item>
    
      <item>
        <title>restic 0.9.3 released</title>
        <description>&lt;p&gt;We’ve just released &lt;a href=&quot;https://github.com/restic/restic/releases/v0.9.3&quot;&gt;restic 0.9.3&lt;/a&gt;. It is mostly a maintenance release, but several smaller enhancements have been added.&lt;/p&gt;

&lt;p&gt;For downloading the new release and see a more detailed list of important changes, head over to &lt;a href=&quot;https://github.com/restic/restic/releases/v0.9.3&quot;&gt;GitHub&lt;/a&gt;. As always, thanks for &lt;a href=&quot;https://github.com/restic/restic/issues/new/choose&quot;&gt;reporting any issues&lt;/a&gt; you encounter! Or just write a post in &lt;a href=&quot;https://forum.restic.net&quot;&gt;the forum&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sat, 13 Oct 2018 00:00:00 +0200</pubDate>
        <link>https://restic.net/blog/2018-10-13/restic-0.9.3-released</link>
        <guid isPermaLink="true">https://restic.net/blog/2018-10-13/restic-0.9.3-released</guid>

        
        

      </item>
    
      <item>
        <title>Configuring GitHub Issue Templates</title>
        <description>&lt;p&gt;Like many other Open Source projects, restic uses GitHub for hosting the source
code and managing issues. Over time, we discovered that oftentimes users open
an issue on GitHub which just consists of a question, for example on how to use
restic in a certain situation. While such issues can be answered quickly,
sometimes there’s no consent on when the issue can be seen as resolved and
therefore closed (the issue is not actionable). The GitHub issue tracker is
then cluttered with issues for which there is no clear next action and no
clear “resolved” state. This blog post describes how we set up the issue
templates on GitHub to resolve this situation nicely.&lt;/p&gt;

&lt;p&gt;A year ago in August 2017 we &lt;a href=&quot;/blog/2017-08-11/discourse-forum&quot;&gt;decided to install&lt;/a&gt;
a forum based on &lt;a href=&quot;https://discourse.org&quot;&gt;Discourse&lt;/a&gt; at
&lt;a href=&quot;https://forum.restic.net&quot;&gt;https://forum.restic.net&lt;/a&gt;. It developed nicely and
over time attracted a stable base of core users and developers who are ready to
help each other and new restic users.&lt;/p&gt;

&lt;p&gt;This leaves the question: how do users who have a question find the forum?
Sure, it’s linked on the website, but that did not seem enough. Thankfully,
GitHub supports templates for all newly created issues, so we added a bit of
text which encourages users to use the forum if they are unsure:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Welcome! If you have a question or are unsure if you should open an issue,
please use the forum instead!&lt;/p&gt;

  &lt;p&gt;https://forum.restic.net&lt;/p&gt;

  &lt;p&gt;The forum is a better place for questions about restic or general suggestions
and topics, e.g. usage or documentation questions! This issue tracker is mainly
for tracking bugs and feature requests directly relating to the development of
the software itself, rather than the project.&lt;/p&gt;

  &lt;p&gt;Thanks for understanding, and for contributing to the project!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;We also added a few questions users should answer in order to make debugging
easier, but it turned out that the set of questions we ask for bugs is not
helpful when suggesting a new feature. We then discovered (almost
accidentally), that GitHub also &lt;a href=&quot;https://help.github.com/articles/about-issue-and-pull-request-templates/&quot;&gt;supports several different types&lt;/a&gt;
of issue templates, so now when you &lt;a href=&quot;https://github.com/restic/restic/issues/new/choose&quot;&gt;create a new issue for restic&lt;/a&gt;,
you’re greeted with the following dialogue:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/github-new-issue.png&quot; alt=&quot;Opening a new Issue on GitHub&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The “Bug report” and “Feature request” templates are stored in the files
&lt;code class=&quot;highlighter-rouge&quot;&gt;Bug.md&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;Feature.md&lt;/code&gt; in the directory &lt;code class=&quot;highlighter-rouge&quot;&gt;.github/ISSUE_TEMPLATE&lt;/code&gt; of the
restic repository. The headline and description can be set in the header
of the file, for example the &lt;a href=&quot;https://github.com/restic/restic/blob/master/.github/ISSUE_TEMPLATE/Bug.md&quot;&gt;“Bug report” template&lt;/a&gt; starts with the following
text:&lt;/p&gt;

&lt;div class=&quot;language-markdown highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Bug report&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;about&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Report a problem with restic to help us resolve it and improve&lt;/span&gt;
&lt;span class=&quot;nn&quot;&gt;---&lt;/span&gt;

&amp;lt;!--

Welcome! - We kindly ask that you:
&lt;span class=&quot;p&quot;&gt;
  1.&lt;/span&gt; Fill out the issue template below - not doing so needs a good reason.
&lt;span class=&quot;p&quot;&gt;  2.&lt;/span&gt; Use the forum if you have a question rather than a bug or feature request.

&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
--&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/restic/restic/blob/master/.github/ISSUE_TEMPLATE/Feature.md&quot;&gt;“Feature request” template&lt;/a&gt;
is very similar, just with other questions. We’re using a combination of
Markdown headlines to structure the issue text, and HTML comments for a bit of
background explanation. The HTML comments are not shown when displaying an
issue in GitHub, so they don’t distract from the content.&lt;/p&gt;

&lt;p&gt;This leaves us with the third kind of issue users can create by clicking on the
link titled “Open a regular issue”. For this, the file
&lt;a href=&quot;https://github.com/restic/restic/blob/master/.github/ISSUE_TEMPLATE.md&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;.github/ISSUE_TEMPLATE.md&lt;/code&gt;&lt;/a&gt; is used.&lt;/p&gt;

&lt;p&gt;This allows users to select the type of issue they would like to create, and in
all cases there’s a hint to use the forum if they are unsure what to do. This
works very well for us.&lt;/p&gt;

&lt;p&gt;If you’re a user and submitted an issue before (or maybe you’ve been redirected
to the forum), please tell us about the experience? Did you like it? Was it
awkward? How do other projects handle nudging users into submitting
high-quality issues that are actionable? Please leave a comment in the forum
linked below this article!&lt;/p&gt;
</description>
        <pubDate>Sun, 09 Sep 2018 00:00:00 +0200</pubDate>
        <link>https://restic.net/blog/2018-09-09/GitHub-issue-templates</link>
        <guid isPermaLink="true">https://restic.net/blog/2018-09-09/GitHub-issue-templates</guid>

        
        

      </item>
    
      <item>
        <title>Enabling the Go Build Cache on Travis/AppVeyor</title>
        <description>&lt;p&gt;The restic project runs the unit and integration tests for each pushed commit
and each pull request. We’re using &lt;a href=&quot;https://travis-ci.com&quot;&gt;Travis CI&lt;/a&gt; for Linux
and OS X, and &lt;a href=&quot;https://www.appveyor.com/&quot;&gt;AppVeyor&lt;/a&gt; for Windows. We’re very
grateful that they provide their services free of charge for Open Source
projects!&lt;/p&gt;

&lt;p&gt;Our project not only runs the tests on Travis, but also compiles restic for
each supported architecture, operating system, and version of Go. Go is known
for its fast compilation times, but still, compilation takes its time. Roughly,
for each version of Go, running all the tests takes between 13 and 25 minutes:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/travis-ci-before-build-cache.png&quot; alt=&quot;Build Times on Travis CI Before Caching Build Cache&quot; /&gt;&lt;/p&gt;

&lt;p&gt;With the release of Go 1.10, a build cache was
&lt;a href=&quot;https://golang.org/doc/go1.10#build&quot;&gt;introduced&lt;/a&gt;, which saves compiled
artifacts in a cache directory. On Linux, that’s usually located in
&lt;code class=&quot;highlighter-rouge&quot;&gt;~/.cache/go-build&lt;/code&gt;. So when the same package (with the same build tags and
architecture and so on) is to be compiled again, the Go compiler can just use
the cached version.&lt;/p&gt;

&lt;p&gt;Travis executes the tests in a fresh container each time they are run, but we
can &lt;a href=&quot;https://docs.travis-ci.com/user/caching/&quot;&gt;tell it&lt;/a&gt; to keep the build cache
directory and extract it before the tests are run next time. The entry in the
configuration file &lt;code class=&quot;highlighter-rouge&quot;&gt;.travis.yml&lt;/code&gt; looks like this:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;directories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$HOME/.cache/go-build&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$HOME/gopath/pkg/mod&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This also caches another directory in the GOPATH called &lt;code class=&quot;highlighter-rouge&quot;&gt;pkg/mod&lt;/code&gt;, which contains
information about released modules. This is a feature introduced with Go 1.11.&lt;/p&gt;

&lt;p&gt;The directories listed above work for Linux, but the Go build cache directory
is somewhere else on OS X, so we need to add the cache entries to our build
matrix:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;matrix&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;include&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;linux&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1.9.x&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;directories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$HOME/.cache/go-build&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$HOME/gopath/pkg/mod&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;linux&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1.10.x&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;directories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$HOME/.cache/go-build&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$HOME/gopath/pkg/mod&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;linux&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1.11.x&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;directories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$HOME/.cache/go-build&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$HOME/gopath/pkg/mod&lt;/span&gt;

    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;os&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;osx&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;go&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;1.11.x&quot;&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;directories&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$HOME/Library/Caches/go-build&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$HOME/gopath/pkg/mod&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After a successful build, Travis will then archive both directories, and
extract them again for the next test run. Indeed, this speeds up running the
tests a great deal (depending on how much code has changed):&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/travis-ci-with-build-cache.png&quot; alt=&quot;Build Times on Travis CI With Caching Build Cache&quot; /&gt;&lt;/p&gt;

&lt;p&gt;You can see in the screenshot above that the build time for Go 1.9 wasn’t
reduced at all since it does not have the build cache feature.&lt;/p&gt;

&lt;p&gt;AppVeyor also has a &lt;a href=&quot;https://www.appveyor.com/docs/build-cache/&quot;&gt;build cache
feature&lt;/a&gt;, it can be enabled by
specifying the list of directories to cache in the &lt;code class=&quot;highlighter-rouge&quot;&gt;appveyor.yml&lt;/code&gt; like this:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;%LocalAppData%\go-build'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For restic, the build cache is not so relevant on AppVeyor, since we’re only
using it to run our integration tests on Windows and don’t run any
cross-compilation.&lt;/p&gt;

&lt;p&gt;We hope that the build cache does not become too large, its size is limited for
both Travis and AppVeyor. The Go compiler will &lt;a href=&quot;https://golang.org/cmd/go/#hdr-Build_and_test_caching&quot;&gt;delete files which haven’t been
used recently&lt;/a&gt;, so we
hope this is enough to keep the cache size small. We’ll keep you posted when we
discover any problems with this approach.&lt;/p&gt;

&lt;p&gt;Let us know what you think in the comments (which are hosted in &lt;a href=&quot;https://forum.restic.net&quot;&gt;our
forum&lt;/a&gt;)!&lt;/p&gt;
</description>
        <pubDate>Sun, 02 Sep 2018 00:00:00 +0200</pubDate>
        <link>https://restic.net/blog/2018-09-02/travis-build-cache</link>
        <guid isPermaLink="true">https://restic.net/blog/2018-09-02/travis-build-cache</guid>

        
        

      </item>
    
      <item>
        <title>restic 0.9.2 released</title>
        <description>&lt;p&gt;We’ve just released &lt;a href=&quot;https://github.com/restic/restic/releases/v0.9.2&quot;&gt;restic 0.9.2&lt;/a&gt;. Among several fixes it includes support for “Application Keys” for BackBlaze B2, which can be restricted to a specific bucket and/or path (so you don’t have to give restic access to all your files stored at B2).&lt;/p&gt;

&lt;p&gt;For downloading the new release and see a more detailed list of important changes, head over to &lt;a href=&quot;https://github.com/restic/restic/releases/v0.9.2&quot;&gt;GitHub&lt;/a&gt;. As always, thanks for &lt;a href=&quot;https://github.com/restic/restic/issues/new&quot;&gt;reporting any issues&lt;/a&gt; you encounter! Or just write a post in &lt;a href=&quot;https://forum.restic.net&quot;&gt;the forum&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 06 Aug 2018 00:00:00 +0200</pubDate>
        <link>https://restic.net/blog/2018-08-06/restic-0.9.2-released</link>
        <guid isPermaLink="true">https://restic.net/blog/2018-08-06/restic-0.9.2-released</guid>

        
        

      </item>
    
      <item>
        <title>restic 0.9.1 released</title>
        <description>&lt;p&gt;We’ve just released &lt;a href=&quot;https://github.com/restic/restic/releases/v0.9.1&quot;&gt;restic 0.9.1&lt;/a&gt;, a minor bugfix release.&lt;/p&gt;

&lt;p&gt;For downloading the new release and see a more detailed list of important changes, head over to &lt;a href=&quot;https://github.com/restic/restic/releases/v0.9.1&quot;&gt;GitHub&lt;/a&gt;. As always, thanks for &lt;a href=&quot;https://github.com/restic/restic/issues/new&quot;&gt;reporting any issues&lt;/a&gt; you encounter! Or just write a post in &lt;a href=&quot;https://forum.restic.net&quot;&gt;the forum&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Sun, 10 Jun 2018 00:00:00 +0200</pubDate>
        <link>https://restic.net/blog/2018-06-10/restic-0.9.1-released</link>
        <guid isPermaLink="true">https://restic.net/blog/2018-06-10/restic-0.9.1-released</guid>

        
        

      </item>
    
      <item>
        <title>restic 0.9.0 released</title>
        <description>&lt;p&gt;We’ve just released &lt;a href=&quot;https://github.com/restic/restic/releases/tag/v0.9.0&quot;&gt;restic 0.9.0&lt;/a&gt;. This is the next bigger release since 0.8.0, it mainly brings a completely rewritten archiver core, improves the speed for &lt;code class=&quot;highlighter-rouge&quot;&gt;restic check&lt;/code&gt;, and many bug fixes.&lt;/p&gt;

&lt;p&gt;For downloading the new release and see a more detailed list of important changes, head over to &lt;a href=&quot;https://github.com/restic/restic/releases/tag/v0.9.0&quot;&gt;GitHub&lt;/a&gt;. As always, thanks for &lt;a href=&quot;https://github.com/restic/restic/issues/new&quot;&gt;reporting any issues&lt;/a&gt; you encounter! Or just write a post in &lt;a href=&quot;https://forum.restic.net&quot;&gt;the forum&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Mon, 21 May 2018 00:00:00 +0200</pubDate>
        <link>https://restic.net/blog/2018-05-21/restic-0.9.0-released</link>
        <guid isPermaLink="true">https://restic.net/blog/2018-05-21/restic-0.9.0-released</guid>

        
        

      </item>
    
  </channel>
</rss>
